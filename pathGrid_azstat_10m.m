% pathGrid_azstat_10m.m
% 25 January 2019
%
% Takes 10-minute stroke-station pair files as input and calculates
% whole-day matrix of grid crossing azimuths statistics by stroke-station
% paths.  Clears grid_cell before loading next 10-minute file to reduce
% memory usage.
%
% INPUTS:
%       strokelist_lite_10m_*.mat
%           File of stroke-station pairs generated by getPathsFromAP.m from
%           APfiles.  10-minute version has name format
%           strokelist_lite_10m_yyyymmddHHMM.mat.
%
% FUNCTIONS:
%       pg_gridcell.m
%           Converts strokelist to 180 x 360 cell array 'grid_cell'.  These
%           outputs are large (total 1-day = several GB), so each grid_cell
%           is cleared before proceding to next 10-minute strokelist.
%
%       pg_gridcross.m
%           Converts grid_cell to grid_crossings, a 180 x 360 matrix.  Each
%           element is the length of the corresponding cell in grid_cell.
%
% OUTPUTS:
%       gc_kurt_all*.mat
%           180 x 360 x 144 matrix of gc_kurt, i.e. circular kurtosis of
%           grid_crossings' azimuthal distribution.  Each of 144 frames
%           represents stroke-station path crossings during the 10-minute
%           window in each strokelist file.
% 
%       gc_skew_all*.mat
%           180 x 360 x 144 matrix of gc_skew, i.e. circular skewness of
%           grid_crossings' azimuthal distribution.  Each of 144 frames
%           represents stroke-station path crossings during the 10-minute
%           window in each strokelist file.
%
%       gc_var_all*.mat
%           180 x 360 x 144 matrix of gc_var, i.e. circular variance of
%           grid_crossings' azimuthal distribution.  Each of 144 frames
%           represents stroke-station path crossings during the 10-minute
%           window in each strokelist file.
%
%% Input parameters:

% Enter start and stop APfile dates (inclusive).
starttime = datenum(2017,09,07,00,00,00);
stoptime = datenum(2017,09,08,00,00,00);

% Enter number of time bins (e.g. 144 10-minute time bins per day)
frames = 144;

minute_bin_edges = linspace(starttime,stoptime,frames+1);

grid_crossings = zeros(180,360,frames);

gc_variance = zeros(180,360,frames);
gc_kurtosis = zeros(180,360,frames);
gc_skewness = zeros(180,360,frames);
gc_meanaz = zeros(180,360,frames);

for m = 1:frames
    
    filestr = datestr(minute_bin_edges(m),'yyyymmddHHMM');
    filenum = str2double(filestr);
    strokefile = sprintf('strokelist_lite_10m_%d.mat',filenum);
    
    gridcell = pg_gridcell(strokefile);
    
    gridcross = pg_gridcross(gridcell);
    
    grid_crossings(:,:,m) = gridcross;
        
    [gc_var, d1] = pg_variance(gridcell);
    gc_variance(:,:,m) = gc_var;
    
    [gc_kurt, d2] = pg_kurtosis(gridcell);
    gc_kurtosis(:,:,m) = gc_kurt;
    
    [gc_skew, d3] = pg_skewness(gridcell);
    gc_skewness(:,:,m) = gc_skew;    

    [gc_maz] = pg_meanaz(gridcell);
    gc_meanaz(:,:,m) = gc_maz;
    
    % append to log file
    msg = sprintf('Completed run %s',filestr);
    fid = fopen('pg_az_Log.txt', 'a');
    if fid == -1
        error('Cannot open log file.');
    end
    fprintf(fid, '%s: %s\n', datestr(now, 0), msg);
    fclose(fid);
    
end

save('grid_crossings_10m_20170907.mat','grid_crossings');
save('gc_var_10m_20170907.mat','gc_variance');
save('gc_kurt_10m_20170907.mat','gc_kurtosis');
save('gc_skew_10m_20170907.mat','gc_skewness');
save('gc_maz_10m_20170907.mat','gc_meanaz');
